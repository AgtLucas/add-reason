// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Chalk                          = require("chalk");
var Utils$ReasonTemplate           = require("./utils.js");
var GenericBindings$ReasonTemplate = require("./genericBindings.js");

function getReasonSource() {
  return "/lib/js/src/";
}

function complete(success, name) {
  var msg = success !== 0 ? GenericBindings$ReasonTemplate.getEmoji("sparkles") + (Chalk.green("done") + (" import your compiled code as `" + (name + "`"))) : GenericBindings$ReasonTemplate.getEmoji("no_entry_sign") + (Chalk.red("failure") + " see which step went wrong");
  console.log(msg);
  return /* () */0;
}

function performConfigCreation(_, _$1, _$2) {
  console.log(GenericBindings$ReasonTemplate.getEmoji("page_with_curl") + (Chalk.green("created config") + " "));
  return /* () */0;
}

function performLinking(name, directory, rootDirectory) {
  var linkToNodeModules = Utils$ReasonTemplate.combinePaths(/* :: */[
        rootDirectory,
        /* :: */[
          "node_modules",
          /* [] */0
        ]
      ]);
  var source = Utils$ReasonTemplate.combinePaths(/* :: */[
        rootDirectory,
        /* :: */[
          "lib/js",
          /* :: */[
            directory,
            /* [] */0
          ]
        ]
      ]);
  var dest = Utils$ReasonTemplate.combinePaths(/* :: */[
        linkToNodeModules,
        /* :: */[
          name,
          /* [] */0
        ]
      ]);
  return Utils$ReasonTemplate.attemptToLink(source, dest);
}

function handle(name, directory, rootDirectory) {
  performConfigCreation(name, directory, rootDirectory);
  var linkingSuccess = performLinking(name, directory, rootDirectory);
  return complete(linkingSuccess, name);
}

exports.getReasonSource       = getReasonSource;
exports.complete              = complete;
exports.performConfigCreation = performConfigCreation;
exports.performLinking        = performLinking;
exports.handle                = handle;
/* chalk Not a pure module */
