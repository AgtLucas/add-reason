// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Fs        = require("fs");
var Chalk     = require("chalk");
var $$String  = require("bs-platform/lib/js/string.js");
var NodeEmoji = require("node-emoji");

function responseMessage(err) {
  var msg = err ? NodeEmoji.get("no_entry_sign") + ("  " + Chalk.red("failed link, " + err[0])) : NodeEmoji.get("paperclip") + ("  " + Chalk.green("successful link"));
  console.log(msg);
  return /* () */0;
}

function createSymlink(source, dest) {
  var source$1 = "/" + source;
  var dest$1 = "/" + dest;
  Fs.symlink(source$1, dest$1, responseMessage);
  console.log(Chalk.green("ln") + (" -sv " + (source$1 + (" " + dest$1))));
  return /* () */0;
}

function cleanPath(path) {
  var size = path.length;
  var first = $$String.sub(path, 0, 1);
  var last = $$String.sub(path, size - 1 | 0, 1);
  var starting = first === "/" ? 1 : 0;
  var ending = last === "/" ? (size - starting | 0) - 1 | 0 : size - starting | 0;
  return $$String.sub(path, starting, ending);
}

function combinePaths(beginning, ending) {
  var validBeginning = cleanPath(beginning);
  var validEndling = cleanPath(ending);
  return validBeginning + ("/" + validEndling);
}

exports.responseMessage = responseMessage;
exports.createSymlink   = createSymlink;
exports.cleanPath       = cleanPath;
exports.combinePaths    = combinePaths;
/* fs Not a pure module */
